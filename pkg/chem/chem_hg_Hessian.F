C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C                                                                  
C Hessian File                                                     
C                                                                  
C Generated by KPP-2.2.3 symbolic chemistry Kinetics PreProcessor  
C       (http://www.cs.vt.edu/~asandu/Software/KPP)                
C KPP is distributed under GPL, the general public licence         
C       (http://www.gnu.org/copyleft/gpl.html)                     
C (C) 1995-1997, V. Damian & A. Sandu, CGRER, Univ. Iowa           
C (C) 1997-2005, A. Sandu, Michigan Tech, Virginia Tech            
C     With important contributions from:                           
C        M. Damian, Villanova University, USA                      
C        R. Sander, Max-Planck Institute for Chemistry, Mainz, Germany
C                                                                  
C File                 : chem_hg_Hessian.f                         
C Time                 : Thu Mar 27 11:36:37 2014                  
C Working directory    : /n/home05/yxzhang/kpp/kpp-2.2.3/mehg      
C Equation file        : chem_hg.kpp                               
C Output root filename : chem_hg                                   
C                                                                  
C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C                                                                  
C Hessian - function for Hessian (Jac derivative w.r.t. variables) 
C   Arguments :                                                    
C      V         - Concentrations of variable species (local)      
C      F         - Concentrations of fixed species (local)         
C      RCT       - Rate constants (local)                          
C      HESS      - Hessian of Var (i.e. the 3-tensor d Jac / d Var)
C                                                                  
C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      SUBROUTINE Hessian ( V, F, RCT, HESS )

      IMPLICIT NONE
      INCLUDE 'chem_hg_Parameters.h'

C V - Concentrations of variable species (local)                   
      REAL*8 V(NVAR)
C F - Concentrations of fixed species (local)                      
      REAL*8 F(NFIX)
C RCT - Rate constants (local)                                     
      REAL*8 RCT(NREACT)
C HESS - Hessian of Var (i.e. the 3-tensor d Jac / d Var)          
      REAL*8 HESS(NHESS)

C --------------------------------------------------------         
C Note: HESS is represented in coordinate sparse format:           
C       HESS(m) = d^2 f_i / dv_j dv_k = d Jac_{i,j} / dv_k         
C       where i = IHESS_I(m), j = IHESS_J(m), k = IHESS_K(m).      
C --------------------------------------------------------         
C Note: d^2 f_i / dv_j dv_k = d^2 f_i / dv_k dv_j,                 
C       therefore only the terms d^2 f_i / dv_j dv_k               
C       with j <= k are computed and stored in HESS.               
C --------------------------------------------------------         

C Local variables                                                  
C D2A - Second derivatives of equation rates                       
      REAL*8 D2A(1)

C Computation of the second derivatives of equation rates          

C Computation of the Jacobian derivative                           
      RETURN
      END

C End of Hessian function                                          
C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C                                                                  
C HessTR_Vec - Hessian transposed times user vectors               
C   Arguments :                                                    
C      HESS      - Hessian of Var (i.e. the 3-tensor d Jac / d Var)
C      U1        - User vector                                     
C      U2        - User vector                                     
C      HTU       - Transposed Hessian times user vectors: (Hess x U2)^T * U1 = [d (Jac^T*U1)/d Var] * U2 
C                                                                  
C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      SUBROUTINE HessTR_Vec ( HESS, U1, U2, HTU )

      IMPLICIT NONE
      INCLUDE 'chem_hg_Parameters.h'

C HESS - Hessian of Var (i.e. the 3-tensor d Jac / d Var)          
      REAL*8 HESS(NHESS)
C U1 - User vector                                                 
      REAL*8 U1(NVAR)
C U2 - User vector                                                 
      REAL*8 U2(NVAR)
C HTU - Transposed Hessian times user vectors: (Hess x U2)^T * U1 = [d (Jac^T*U1)/d Var] * U2 
      REAL*8 HTU(NVAR)

C Compute the vector HTU =(Hess x U2)^T * U1 = d (Jac^T*U1)/d Var * U2 
      HTU(1) = 0
      HTU(2) = 0
      HTU(3) = 0
      HTU(4) = 0
      HTU(5) = 0
      HTU(6) = 0
      HTU(7) = 0
      HTU(8) = 0
      HTU(9) = 0
      HTU(10) = 0
      HTU(11) = 0
      HTU(12) = 0
      HTU(13) = 0
      HTU(14) = 0
      RETURN
      END

C End of HessTR_Vec function                                       
C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C                                                                  
C Hess_Vec - Hessian times user vectors                            
C   Arguments :                                                    
C      HESS      - Hessian of Var (i.e. the 3-tensor d Jac / d Var)
C      U1        - User vector                                     
C      U2        - User vector                                     
C      HU        - Hessian times user vectors: (Hess x U2) * U1 = [d (Jac*U1)/d Var] * U2
C                                                                  
C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      SUBROUTINE Hess_Vec ( HESS, U1, U2, HU )

      IMPLICIT NONE
      INCLUDE 'chem_hg_Parameters.h'

C HESS - Hessian of Var (i.e. the 3-tensor d Jac / d Var)          
      REAL*8 HESS(NHESS)
C U1 - User vector                                                 
      REAL*8 U1(NVAR)
C U2 - User vector                                                 
      REAL*8 U2(NVAR)
C HU - Hessian times user vectors: (Hess x U2) * U1 = [d (Jac*U1)/d Var] * U2
      REAL*8 HU(NVAR)

C Compute the vector HU =(Hess x U2) * U1 = d (Jac*U1)/d Var * U2  
      HU(1) = 0
      HU(2) = 0
      HU(3) = 0
      HU(4) = 0
      HU(5) = 0
      HU(6) = 0
      HU(7) = 0
      HU(8) = 0
      HU(9) = 0
      HU(10) = 0
      HU(11) = 0
      HU(12) = 0
      HU(13) = 0
      HU(14) = 0
      RETURN
      END

C End of Hess_Vec function                                         
C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


