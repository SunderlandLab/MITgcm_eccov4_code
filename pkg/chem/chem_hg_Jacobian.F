C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C                                                                  
C The ODE Jacobian of Chemical Model File                          
C                                                                  
C Generated by KPP-2.2.3 symbolic chemistry Kinetics PreProcessor  
C       (http://www.cs.vt.edu/~asandu/Software/KPP)                
C KPP is distributed under GPL, the general public licence         
C       (http://www.gnu.org/copyleft/gpl.html)                     
C (C) 1995-1997, V. Damian & A. Sandu, CGRER, Univ. Iowa           
C (C) 1997-2005, A. Sandu, Michigan Tech, Virginia Tech            
C     With important contributions from:                           
C        M. Damian, Villanova University, USA                      
C        R. Sander, Max-Planck Institute for Chemistry, Mainz, Germany
C                                                                  
C File                 : chem_hg_Jacobian.f                        
C Time                 : Thu Mar 27 11:36:36 2014                  
C Working directory    : /n/home05/yxzhang/kpp/kpp-2.2.3/mehg      
C Equation file        : chem_hg.kpp                               
C Output root filename : chem_hg                                   
C                                                                  
C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C                                                                  
C Jac_SP - the Jacobian of Variables in sparse matrix representation
C   Arguments :                                                    
C      V         - Concentrations of variable species (local)      
C      F         - Concentrations of fixed species (local)         
C      RCT       - Rate constants (local)                          
C      JVS       - sparse Jacobian of variables                    
C                                                                  
C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      SUBROUTINE Jac_SP ( V, F, RCT, JVS )

      IMPLICIT NONE
      INCLUDE 'chem_hg_Parameters.h'

C V - Concentrations of variable species (local)                   
      REAL*8 V(NVAR)
C F - Concentrations of fixed species (local)                      
      REAL*8 F(NFIX)
C RCT - Rate constants (local)                                     
      REAL*8 RCT(NREACT)
C JVS - sparse Jacobian of variables                               
      REAL*8 JVS(LU_NONZERO)


C Local variables                                                  
C B - Temporary array                                              
      REAL*8 B(10)

C B(1) = dA(1)/dV(13)                                              
      B(1) = RCT(1)
C B(2) = dA(2)/dV(13)                                              
      B(2) = RCT(2)
C B(3) = dA(3)/dV(14)                                              
      B(3) = RCT(3)
C B(4) = dA(4)/dV(14)                                              
      B(4) = RCT(4)
C B(5) = dA(5)/dV(13)                                              
      B(5) = RCT(5)
C B(6) = dA(6)/dV(14)                                              
      B(6) = RCT(6)
C B(7) = dA(7)/dV(12)                                              
      B(7) = RCT(7)
C B(8) = dA(8)/dV(12)                                              
      B(8) = RCT(8)
C B(9) = dA(9)/dV(12)                                              
      B(9) = RCT(9)
C B(10) = dA(10)/dV(11)                                            
      B(10) = RCT(10)

C Construct the Jacobian terms from B's                            
C JVS(1) = Jac_FULL(1,1)                                           
      JVS(1) = 0
C JVS(2) = Jac_FULL(1,13)                                          
      JVS(2) = B(1)
C JVS(3) = Jac_FULL(2,2)                                           
      JVS(3) = 0
C JVS(4) = Jac_FULL(2,13)                                          
      JVS(4) = B(2)
C JVS(5) = Jac_FULL(3,3)                                           
      JVS(5) = 0
C JVS(6) = Jac_FULL(3,14)                                          
      JVS(6) = B(3)
C JVS(7) = Jac_FULL(4,4)                                           
      JVS(7) = 0
C JVS(8) = Jac_FULL(4,14)                                          
      JVS(8) = B(4)
C JVS(9) = Jac_FULL(5,5)                                           
      JVS(9) = 0
C JVS(10) = Jac_FULL(5,13)                                         
      JVS(10) = B(5)
C JVS(11) = Jac_FULL(6,6)                                          
      JVS(11) = 0
C JVS(12) = Jac_FULL(6,14)                                         
      JVS(12) = B(6)
C JVS(13) = Jac_FULL(7,7)                                          
      JVS(13) = 0
C JVS(14) = Jac_FULL(7,12)                                         
      JVS(14) = B(7)
C JVS(15) = Jac_FULL(8,8)                                          
      JVS(15) = 0
C JVS(16) = Jac_FULL(8,12)                                         
      JVS(16) = B(8)
C JVS(17) = Jac_FULL(9,9)                                          
      JVS(17) = 0
C JVS(18) = Jac_FULL(9,12)                                         
      JVS(18) = B(9)
C JVS(19) = Jac_FULL(10,10)                                        
      JVS(19) = 0
C JVS(20) = Jac_FULL(10,11)                                        
      JVS(20) = B(10)
C JVS(21) = Jac_FULL(11,11)                                        
      JVS(21) = -B(10)
C JVS(22) = Jac_FULL(11,12)                                        
      JVS(22) = B(9)
C JVS(23) = Jac_FULL(12,11)                                        
      JVS(23) = B(10)
C JVS(24) = Jac_FULL(12,12)                                        
      JVS(24) = -B(7)-B(8)-B(9)
C JVS(25) = Jac_FULL(12,14)                                        
      JVS(25) = B(6)
C JVS(26) = Jac_FULL(13,12)                                        
      JVS(26) = B(7)
C JVS(27) = Jac_FULL(13,13)                                        
      JVS(27) = -B(1)-B(2)-B(5)
C JVS(28) = Jac_FULL(13,14)                                        
      JVS(28) = B(3)+B(4)
C JVS(29) = Jac_FULL(14,12)                                        
      JVS(29) = B(8)
C JVS(30) = Jac_FULL(14,13)                                        
      JVS(30) = B(1)+B(2)+B(5)
C JVS(31) = Jac_FULL(14,14)                                        
      JVS(31) = -B(3)-B(4)-B(6)
      RETURN
      END

C End of Jac_SP function                                           
C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C                                                                  
C Jac_SP_Vec - function for sparse multiplication: sparse Jacobian times vector
C   Arguments :                                                    
C      JVS       - sparse Jacobian of variables                    
C      UV        - User vector for variables                       
C      JUV       - Jacobian times user vector                      
C                                                                  
C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      SUBROUTINE Jac_SP_Vec ( JVS, UV, JUV )

      IMPLICIT NONE
      INCLUDE 'chem_hg_Parameters.h'

C JVS - sparse Jacobian of variables                               
      REAL*8 JVS(LU_NONZERO)
C UV - User vector for variables                                   
      REAL*8 UV(NVAR)
C JUV - Jacobian times user vector                                 
      REAL*8 JUV(NVAR)

      JUV(1) = JVS(1)*UV(1)+JVS(2)*UV(13)
      JUV(2) = JVS(3)*UV(2)+JVS(4)*UV(13)
      JUV(3) = JVS(5)*UV(3)+JVS(6)*UV(14)
      JUV(4) = JVS(7)*UV(4)+JVS(8)*UV(14)
      JUV(5) = JVS(9)*UV(5)+JVS(10)*UV(13)
      JUV(6) = JVS(11)*UV(6)+JVS(12)*UV(14)
      JUV(7) = JVS(13)*UV(7)+JVS(14)*UV(12)
      JUV(8) = JVS(15)*UV(8)+JVS(16)*UV(12)
      JUV(9) = JVS(17)*UV(9)+JVS(18)*UV(12)
      JUV(10) = JVS(19)*UV(10)+JVS(20)*UV(11)
      JUV(11) = JVS(21)*UV(11)+JVS(22)*UV(12)
      JUV(12) = JVS(23)*UV(11)+JVS(24)*UV(12)+JVS(25)*UV(14)
      JUV(13) = JVS(26)*UV(12)+JVS(27)*UV(13)+JVS(28)*UV(14)
      JUV(14) = JVS(29)*UV(12)+JVS(30)*UV(13)+JVS(31)*UV(14)
      RETURN
      END

C End of Jac_SP_Vec function                                       
C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C                                                                  
C JacTR_SP_Vec - sparse multiplication: sparse Jacobian transposed times vector
C   Arguments :                                                    
C      JVS       - sparse Jacobian of variables                    
C      UV        - User vector for variables                       
C      JTUV      - Jacobian transposed times user vector           
C                                                                  
C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      SUBROUTINE JacTR_SP_Vec ( JVS, UV, JTUV )

      IMPLICIT NONE
      INCLUDE 'chem_hg_Parameters.h'

C JVS - sparse Jacobian of variables                               
      REAL*8 JVS(LU_NONZERO)
C UV - User vector for variables                                   
      REAL*8 UV(NVAR)
C JTUV - Jacobian transposed times user vector                     
      REAL*8 JTUV(NVAR)

      JTUV(1) = JVS(1)*UV(1)
      JTUV(2) = JVS(3)*UV(2)
      JTUV(3) = JVS(5)*UV(3)
      JTUV(4) = JVS(7)*UV(4)
      JTUV(5) = JVS(9)*UV(5)
      JTUV(6) = JVS(11)*UV(6)
      JTUV(7) = JVS(13)*UV(7)
      JTUV(8) = JVS(15)*UV(8)
      JTUV(9) = JVS(17)*UV(9)
      JTUV(10) = JVS(19)*UV(10)
      JTUV(11) = JVS(20)*UV(10)+JVS(21)*UV(11)+JVS(23)*UV(12)
      JTUV(12) = JVS(14)*UV(7)+JVS(16)*UV(8)+JVS(18)*UV(9)+JVS(22)
     &          *UV(11)+JVS(24)*UV(12)+JVS(26)*UV(13)+JVS(29)*UV(14)
      JTUV(13) = JVS(2)*UV(1)+JVS(4)*UV(2)+JVS(10)*UV(5)+JVS(27)
     &          *UV(13)+JVS(30)*UV(14)
      JTUV(14) = JVS(6)*UV(3)+JVS(8)*UV(4)+JVS(12)*UV(6)+JVS(25)
     &          *UV(12)+JVS(28)*UV(13)+JVS(31)*UV(14)
      RETURN
      END

C End of JacTR_SP_Vec function                                     
C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


