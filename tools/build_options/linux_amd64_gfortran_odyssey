#!/bin/bash
#------------------------------------------------------------------------------
#              Harvard Biogeochemistry of Global Pollutants Group             !
#------------------------------------------------------------------------------#
#BOP
#
# !IROUTINE: linux_amd64_gfortran_odyssey
#
# !DESCRIPTION: Build options for Gfortran Compiler on Linux AMD64 
#  platform, as tested on the Harvard Odyssey supercomputer.
#\\
#\\
# !REMARKS:
#  Tested with the following modules on Odyssey:
#  1) git/2.1.0-fasrc01    4) mpc/1.0.1-fasrc01       7) netcdf/4.1.3-fasrc01
#  2) gmp/6.0.0-fasrc01    5) gcc/4.8.2-fasrc01
#  3) mpfr/3.1.2-fasrc02   6) openmpi/1.8.1-fasrc01
#
#  Note that We need to use netCDF-4.1.3, which keeps both the C and Fortran
#  libraries in the same folder.  MITgcm cannot handle netCDF-4.2, which
#  separates the C and Fortran libraries into different folders.
#
#  This script is passed to genmake2.  We typically use an alias that
#  is defined in the ~/.bashrc_mitgcm file:
# 
#    alias premake='../../../tools/genmake2 -mpi -mods=../code \
#      -optfile=../../../tools/build_options/linux_amd64_pgf77_odyssey'
#
#  NOTE: Gfortran I/O seems to be very slow compared to PGI or Intel.
#
# !REVISION HISTORY:
#  21 Jan 2015 - R. Yantosca - Initial version
#EOP
#------------------------------------------------------------------------------
#BOC

# Set compiler variables (depending on whether we are using MPI or not)
if [[ "x$MPI" = xtrue ]]; then
  CC=mpicc
  FC=mpif77
  F90C=mpif90
  LINK=mpif90
else
  CC=gcc
  FC=gfortran
  F90C=gfortran
  LINK=gfortran
fi

DEFINES='-DWORDLENGTH=4 -DNML_TERMINATOR'
EXTENDED_SRC_FLAG='-ffixed-line-length-132'
F90FIXEDFORMAT='-ffixed-form'
GET_FC_VERSION="--version"
OMPFLAG='-fopenmp'

NOOPTFLAGS='-O0'
NOOPTFILES=''

CFLAGS='-O0'
#- Requires gfortran from 2006 onwards for -fconvert=big-endian
FFLAGS="$FFLAGS -fconvert=big-endian -fimplicit-none"
#- for big setups, compile & link with "-fPIC" or set memory-model to "medium":
#CFLAGS="$CFLAGS -fPIC"
#FFLAGS="$FFLAGS -fPIC"
#-  with FC 19, need to use this without -fPIC (which cancels -mcmodel option):
 CFLAGS="$CFLAGS -mcmodel=medium"
 FFLAGS="$FFLAGS -mcmodel=medium"
#- might want to use '-fdefault-real-8' for fizhi pkg:
#FFLAGS="$FFLAGS -fdefault-real-8 -fdefault-double-8"

if [[ "x$IEEE" = x ]]; then     #- with optimisation:
   #- full optimisation
    FOPTIM='-O3 -funroll-loops'
    NOOPTFILES="$NOOPTFILES ini_masks_etc.F"
   #- can use -O2 (safe optimisation) to avoid Pb with some gcc version of -O3:
   #FOPTIM='-O2 -funroll-loops'
else
   # these may also be useful, but require specific gfortran versions:
   # -Wnonstd-intrinsics        for gfortran <= 4.3
   # -Wintrinsics-std           for gfortran >= 4.4
   # -Wno-tabs                  for gfortran >= 4.3
   # -Wno-unused-dummy-argument for gfortran >= 4.6
   #FFLAGS="$FFLAGS -Waliasing -Wampersand -Wsurprising -Wline-truncation"
   #- or simply:
    FFLAGS="$FFLAGS -Wall"
   #- to get plenty of warnings: -Wall -Wextra (older form: -Wall -W) or:
   #FFLAGS="$FFLAGS -Wconversion -Wimplicit-interface -Wunused-labels"
  if [[ test "x$DEVEL" = x ]]; then  #- no optimisation + IEEE :
    FOPTIM='-O0'
  else                          #- development/check options:
    FOPTIM='-O0 -g -fbounds-check'
    FOPTIM="$FOPTIM -ffpe-trap=invalid,zero,overflow -finit-real=inf"
  fi
fi

F90FLAGS=$FFLAGS
F90OPTIM=$FOPTIM

# Pick the proper netCDF include and library paths
INCLUDEDIRS="${NETCDF_INCLUDE}"
INCLUDES="-I${NETCDF_INCLUDE}"
LIBS="-L${NETCDF_LIB}"

# Pick the proper MPI include paths
INCLUDEDIRS="$INCLUDEDIRS ${MPI_INCLUDE}"
INCLUDES="$INCLUDES -I${MPI_INCLUDE}"
MPIINCLUDEDIR="${MPI_INCLUDE}"

#EOC


