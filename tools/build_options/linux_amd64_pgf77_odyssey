#!/bin/bash
#------------------------------------------------------------------------------
#              Harvard Biogeochemistry of Global Pollutants Group             !
#------------------------------------------------------------------------------#
#BOP
#
# !IROUTINE: linux_amd64_pgf77_odyssey
#
# !DESCRIPTION: Build options for PGI Fortran Compiler on Linux AMD64 
#  platform, as tested on the Harvard Odyssey supercomputer.
#\\
#\\
# !REMARKS:
#  Tested with the following modules on Odyssey:
#   1) pgi/14.10-fasrc01       4) szip/2.1-fasrc01      7) git/2.1.0-fasrc01
#   2) openmpi/1.10.0-fasrc01  5) hdf5/1.8.12-fasrc07
#   3) zlib/1.2.8-fasrc05      6) netcdf/4.1.3-fasrc05
#
#  Note that We need to use netCDF-4.1.3, which keeps both the C and Fortran
#  libraries in the same folder.  MITgcm cannot handle netCDF-4.2, which
#  separates the C and Fortran libraries into different folders.
#
#  This script is passed to genmake2.  We typically use an alias that
#  is defined in the ~/.bashrc_mitgcm file:
# 
#    alias premake='../../../tools/genmake2 -mpi -mods=../code \
#      -optfile=../../../tools/build_options/linux_amd64_pgf77_odyssey'
#
#  OTHER NOTES:
#  (1) Set HAVE_SIGREG to false, which will prevent a "relocation truncated
#       to fit" error.
#  (2) Add -DUSE_PGI_COMPILER to DEFINES.  This will tell certain routines
#       to use the IEEE_IS_NAN function instead of ISNAN.
#  (3) Add -fPIC to FFLAGS to generate position-independent code, because the
#       the netCDF-4.1.3 library on Odyssey was compiled this way
#
# !REVISION HISTORY:
#  21 Jan 2015 - R. Yantosca - Initial version
#EOP
#------------------------------------------------------------------------------
#BOC

# Need to disable the SIGREG option in order to avoid 
# Fortran "relocation truncated to fit errors" 
HAVE_SIGREG=false

# Set compiler variables (depending on whether we are using MPI or not)
if [[ "x$MPI" = xtrue ]]; then
  CC=mpicc
  FC=mpif77
  F90C=mpif90
else
  CC=pgcc
  FC=pgf77
  F90C=pgf90
fi

# C-preprocessor switches to turn on
DEFINES="-DWORDLENGTH=4 -DUSE_PGI_COMPILER"

if [[ "x$ALWAYS_USE_F90" = x1 ]]; then
    FC=$F90C
else
    DEFINES="$DEFINES -DNML_EXTENDED_F77"
fi

# Other default settings
CPP='cpp -traditional -P'
F90FIXEDFORMAT='-Mfixed'
EXTENDED_SRC_FLAG='-Mextend'
GET_FC_VERSION="-V"
OMPFLAG='-mp'
NOOPTFLAGS='-O0'
NOOPTFILES=''

# Fortran compiler flags
FFLAGS="$FFLAGS -byteswapio -fPIC"

# Set optimization flags
if [[ "x$IEEE" = x ]]; then	#- with optimisation:
#   FOPTIM='-tp k8-64e -pc=64 -O2 -Mvect=sse'
#   FOPTIM="$FOPTIM -fastsse -O3 -Msmart -Mvect=cachesize:1048576,transform"
    FOPTIM="-m64 -fast -Mvect=simd"
else				#- no optimisation + IEEE :
   #FFLAGS="$FFLAGS -Mdclchk"  #- pkg/zonal_filt does not pass with declaration-check
    FOPTIM='-m64 -O0 -Kieee'
fi

F90FLAGS=$FFLAGS
F90OPTIM=$FOPTIM

# Pick the proper netCDF include and library paths
INCLUDEDIRS="${NETCDF_INCLUDE}"
INCLUDES="-I${NETCDF_INCLUDE}"
LIBS="-L${NETCDF_LIB}"

# Pick the proper MPI include paths
INCLUDEDIRS="$INCLUDEDIRS ${MPI_INCLUDE}"
INCLUDES="$INCLUDES -I${MPI_INCLUDE}"
MPIINCLUDEDIR="${MPI_INCLUDE}"

#EOC